#!/usr/bin/env python3
#
# Copyright (C) 2022 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# - T4703: merge vlan-id and vlan-range to vlan CLI node

# L2|L3 -> l2|l3
# mac-address -> mac
# network-mode -> mode

import os
import sys

from sys import argv, exit
from vyos.configtree import ConfigTree

if (len(argv) < 1):
    print("Must specify file name!")
    exit(1)

file_name = argv[1]

with open(file_name, 'r') as f:
    config_file = f.read()

config = ConfigTree(config_file)
base = ['service', 'ipoe-server']
if not config.exists(base):
    # Nothing to do
    exit(0)

if config.exists(base + ['authentication', 'interface']):
    for interface in config.list_nodes(base + ['authentication', 'interface']):
        config.rename(base + ['authentication', 'interface', interface, 'mac-address'], 'mac')

        mac_base = base + ['authentication', 'interface', interface, 'mac']
        for mac in config.list_nodes(mac_base):
            vlan_config = mac_base + [mac, 'vlan-id']
            if config.exists(vlan_config):
                config.rename(vlan_config, 'vlan')

for interface in config.list_nodes(base + ['interface']):
    base_path = base + ['interface', interface]
    for vlan in ['vlan-id', 'vlan-range']:
        if config.exists(base_path + [vlan]):
            print(interface, vlan)
            for tmp in config.return_values(base_path + [vlan]):
                config.set(base_path + ['vlan'], value=tmp, replace=False)
            config.delete(base_path + [vlan])

    if config.exists(base_path + ['network-mode']):
        tmp = config.return_value(base_path + ['network-mode'])
        config.delete(base_path + ['network-mode'])
        # Change L2|L3 to lower case l2|l3
        config.set(base_path + ['mode'], value=tmp.lower())

try:
    with open(file_name, 'w') as f:
        f.write(config.to_string())
except OSError as e:
    print("Failed to save the modified config: {}".format(e))
    exit(1)
